import matplotlib.pyplot as plt
import numpy as np

# Завдання 1
# Є дані про планові та фактичні продажі за місяцями. Потрібно порівняти два ряди на одному графіку.
# Створіть список місяців і два списки значень: "План" і "Факт".
# Побудуйте один графік із двома лініями.
# Додайте підписи осей і заголовок.
# Додайте легенду для ліній.
# Відобразіть графік на екрані.

months = ["Січень", "Лютий", "Березень", "Квітень", "Траравень", "Червень"]
plan = [100, 110, 120, 130, 140, 150]
fact = [90, 110, 125, 140, 135, 165]

plt.plot(months, plan, label="План", marker="o")
plt.plot(months, fact, label="Факт", marker="s")

plt.xlabel("Місяць")
plt.ylabel("Продажі")
plt.title("Планові та фактичні продажі")
plt.legend()
plt.show()

# Завдання 2
# Дано значення вікових груп 100 осіб. Потрібно показати розподіл.
# Створіть список (або масив) зі 100 цілих значень віку.
# Побудуйте гістограму розподілу.
# Додайте вертикальну лінію середнього значення.
# Підпишіть осі та додайте заголовок.
# Відобразіть графік на екрані.

ages = np.random.randint(18, 61, 100)
mean_age = ages.mean()

plt.hist(ages, bins=10, color="skyblue", edgecolor="black")
plt.axvline(mean_age, color="red", linestyle="--", label=f"Середнє: {mean_age:.1f}")

plt.xlabel("Вік")
plt.ylabel("Кількість людей")
plt.title("Розподіл вікових груп")
plt.legend()
plt.show()

# Завдання 3
# Є результати іспитів за трьома групами студентів. Потрібно порівняти розкид оцінок між групами.
# Створіть три набори числових результатів (по одній вибірці на групу).
# Побудуйте графік boxplot для трьох груп поруч.
# Підпишіть групи по осі X.
# Додайте підписи осей і заголовок.
# Відобразіть графік на екрані.

group1 = np.random.randint(50, 101, 20)
group2 = np.random.randint(40, 101, 20)
group3 = np.random.randint(30, 101, 20)

plt.boxplot([group1, group2, group3], labels=["Група 1", "Група 2", "Група 3"])

plt.xlabel("Групи")
plt.ylabel("Оцінки")
plt.title("Порівняння результатів іспиту")
plt.show()

# Завдання 4
# Є денні значення температури та вологості за тиждень. Потрібно показати обидві метрики на загальній діаграмі.
# Створіть список дат (7 днів) і два списки значень: температура і вологість.
# Побудуйте лінійний графік температури.
# На тій самій області побудуйте графік вологості.
# Додайте легенду, підписи осей і заголовок.
# Поверніть підписи дат на осі X для читабельності та відобразіть графік.

days = ["Пн", "Вт", "Ср", "Чт", "Пт", "Сб", "Нд"]
temperature = [15, 17, 20, 22, 19, 18, 16]
humidity = [60, 65, 55, 50, 70, 75, 80]

plt.plot(days, temperature, label="Температура (°C)", marker="o")
plt.plot(days, humidity, label="Вологість (%)", marker="s")

plt.xlabel("Дні")
plt.ylabel("Значення")
plt.title("Температура і вологість за тиждень")
plt.legend()
plt.xticks(rotation=45)
plt.show()

# Завдання 5
# Є погодинні дані навантаження сервера за добу. Потрібно показати зміни і виділити область між кривою і віссю X.
# Створіть список годин (0-23) і відповідні значення навантаження.
# Побудуйте лінійний графік навантаження.
# Зафарбуйте область під кривою.
# Додайте сітку, підписи осей і заголовок.
# Відобразіть графік на екрані.
hours = list(range(24))
load = np.random.randint(20, 100, 24)

plt.plot(hours, load, label="Навантаження")
plt.fill_between(hours, load, alpha=0.3)

plt.xlabel("Години")
plt.ylabel("Навантаження (%)")
plt.title("Погодинне навантаження сервера")
plt.grid(True)
plt.legend()
plt.show()

# Завдання 6
# Дано чотири набори метрик продукту: конверсія, утримання, середній чек, кількість замовлень. Потрібно показати їх на окремих панелях.
# Створіть чотири набори числових значень за однією шкалою часу.
# Створіть сітку з чотирьох підграфіків 2×2.
# На кожному підграфіку побудуйте відповідний графік.
# Додайте заголовки для кожного підграфіка та загальний заголовок.
# Відобразіть результат на екрані.

time = np.arange(1, 11)

conversion = np.random.rand(10) * 10 + 50
retention = np.random.rand(10) * 5 + 70
avg_check = np.random.randint(200, 500, 10)
orders = np.random.randint(50, 150, 10)

fig, axs = plt.subplots(2, 2, figsize=(10, 8))

axs[0, 0].plot(time, conversion, marker="o")
axs[0, 0].set_title("Конверсія (%)")

axs[0, 1].plot(time, retention, marker="s")
axs[0, 1].set_title("Утримання (%)")

axs[1, 0].plot(time, avg_check, marker="^")
axs[1, 0].set_title("Середній чек (грн)")

axs[1, 1].plot(time, orders, marker="d")
axs[1, 1].set_title("Кількість замовлень")

fig.suptitle("Метрики продукту", fontsize=14)
plt.tight_layout()
plt.show()